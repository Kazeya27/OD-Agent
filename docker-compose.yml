version: '3.8'

services:
  # Backend API服务
  backend:
    build:
      context: ./agent/backend
      dockerfile: Dockerfile
    container_name: od-backend
    ports:
      - "8502:8502"
    volumes:
      - ./agent/backend/data:/app/data
      - ./agent/backend/geo_points.db:/app/geo_points.db
    environment:
      - PYTHONPATH=/app
    networks:
      - od-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8502/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Agent服务
  agent:
    build:
      context: ./agent/agent
      dockerfile: Dockerfile
    container_name: od-agent
    ports:
      - "8503:8503"
    volumes:
      - ./agent/agent/chat_history:/app/chat_history
      - ./agent/agent/logs:/app/logs
    environment:
      - PYTHONPATH=/app
      - BASE_URL=http://backend:8502
      - LLM_PROVIDER=${LLM_PROVIDER:-gemini}
      - LLM_MODEL=${LLM_MODEL:-gemini-2.5-flash-preview-05-20}
      - LLM_TEMPERATURE=${LLM_TEMPERATURE:-0.6}
      - AGENT_PORT=8503
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
    depends_on:
      - backend
    networks:
      - od-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8503/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend服务
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: od-frontend
    ports:
      - "8501:8501"
    volumes:
      - ./frontend/logs:/app/logs
      - ./frontend/dumps:/app/dumps
    environment:
      - PYTHONPATH=/app
    depends_on:
      - agent
    networks:
      - od-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx反向代理
  nginx:
    image: nginx:alpine
    container_name: od-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - frontend
      - backend
      - agent
    networks:
      - od-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  od-network:
    driver: bridge

volumes:
  backend-data:
  agent-chat-history:
  frontend-logs:
